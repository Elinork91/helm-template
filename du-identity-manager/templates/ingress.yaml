{{- /*
#
# SERVICE INGRESS
#
*/ -}}
{{- if .Values.ingress.service.enabled -}}
{{- $fullName := include "du-identity-manager.fullname" . -}}
{{- $svcPort := .Values.service.port -}}
  {{- if .Capabilities.APIVersions.Has "networking.k8s.io/v1" -}}
apiVersion: networking.k8s.io/v1
  {{- else if .Capabilities.APIVersions.Has "networking.k8s.io/v1beta1" -}}
apiVersion: networking.k8s.io/v1beta1
  {{- else -}}
apiVersion: extensions/v1beta1
  {{- end }}
kind: Ingress
metadata:
  name: {{ $fullName }}
  labels:
    {{- include "du-identity-manager.labels" . | nindent 4 }}
  annotations:
    ingressClassName: {{ .Values.ingress.service.className }}
    cert-manager.io/cluster-issuer: {{ .Values.ingress.service.clusterIssuer }}
  {{- with .Values.ingress.annotations }}
    {{- toYaml . | nindent 4 }}
  {{- end }}

  {{- if .Capabilities.APIVersions.Has "networking.k8s.io/v1" }}
spec:
    {{- if (default .Values.ingress.service.tls.enable true) }}
  tls:
    - hosts:
        - {{ .Values.ingress.service.serviceDomain }}
      secretName: {{ .Values.ingress.service.tls.secretName }}
    {{- else }}
  tls: []
    {{- end }}
  rules:
    {{- range .Values.ingress.service.hosts }}
    - http:
        paths:
          {{- range .paths }}
          - path: {{ . }}
            backend:
              service:
                name: "keycloak"
                port:
                  number: {{ $svcPort }}
            pathType: ImplementationSpecific
          {{- end }}
      {{- if .host}}
      host: {{ .host }}
      {{- end}}
    {{- end }}
  {{- else }}
spec:
    {{- if (default .Values.ingress.service.tls.enable true) }}
  tls:
    - hosts:
        - {{ .Values.ingress.service.serviceDomain }}
      secretName: {{ .Values.ingress.service.tls.secretName }}
    {{- else }}
  tls: []
    {{- end }}
  rules:
    {{- range .Values.ingress.service.hosts }}
    - http:
        paths:
          {{- range .paths }}
          - path: {{ . }}
            backend:
              serviceName: "keycloak"
              servicePort: {{ $svcPort }}
          {{- end }}
      {{- if .host}}
      host: {{ .host }}
      {{- end}}
    {{- end }}
  {{- end -}}
{{- end }}
---
{{- /*
#
# ADMIN INGRESS
#
*/ -}}
{{- if .Values.ingress.admin.enabled -}}
{{- $fullName := include "du-identity-manager.fullname" . -}}
{{- $svcPort := .Values.service.port -}}
  {{- if .Capabilities.APIVersions.Has "networking.k8s.io/v1" -}}
apiVersion: networking.k8s.io/v1
  {{- else if .Capabilities.APIVersions.Has "networking.k8s.io/v1beta1" -}}
apiVersion: networking.k8s.io/v1beta1
  {{- else -}}
apiVersion: extensions/v1beta1
  {{- end }}
kind: Ingress
metadata:
  name: {{ printf "%s-%s" $fullName "admin" }}
  labels:
    {{- include "du-identity-manager.labels" . | nindent 4 }}
  annotations:
    ingressClassName: {{ .Values.ingress.admin.className }}
    cert-manager.io/cluster-issuer: {{ .Values.ingress.admin.clusterIssuer }}
  {{- with .Values.ingress.annotations }}
    {{- toYaml . | nindent 4 }}
  {{- end }}

  {{- if .Capabilities.APIVersions.Has "networking.k8s.io/v1" }}
spec:
    {{- if (default .Values.ingress.admin.tls.enable true) }}
  tls:
    - hosts:
        - {{ .Values.ingress.admin.adminDomain }}
      secretName: {{ .Values.ingress.admin.tls.secretName }}
    {{- else }}
  tls: []
    {{- end }}
  rules:
    {{- range .Values.ingress.admin.hosts }}
    - http:
        paths:
          {{- range .paths }}
          - path: {{ . }}
            backend:
              service:
                name: "keycloak"
                port:
                  number: {{ $svcPort }}
            pathType: ImplementationSpecific
          {{- end }}
      {{- if .host}}
      host: {{ .host }}
      {{- end}}
    {{- end }}
  {{- else }}
spec:
    {{- if (default .Values.ingress.admin.tls.enable true) }}
  tls:
    - hosts:
        - {{ .Values.ingress.admin.adminDomain }}
      secretName: {{ .Values.ingress.admin.tls.secretName }}
    {{- else }}
  tls: []
    {{- end }}
  rules:
    {{- range .Values.ingress.admin.hosts }}
    - http:
        paths:
          {{- range .paths }}
          - path: {{ . }}
            backend:
              serviceName: "keycloak"
              servicePort: {{ $svcPort }}
          {{- end }}
      {{- if .host}}
      host: {{ .host }}
      {{- end}}
    {{- end }}
  {{- end -}}
{{- end }}
